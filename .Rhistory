BBC
rawToChar(BBC)
rawToChar(str(httr::content(Flood)$articles[[5]], max.level = 1))
BBC <- jsonlite::fromJSON(BBC)
is.vector(BBC)
is.raw(BBC)
Flood_txt <- httr::content(Flood, "text")
Flood_txt
rawToChar(Flood_txt)
x <- jsonlite::fromJSON(Flood_txt)
BC <- httr::content(Flood, "text")$articles[[5]]
#?3. Stored in content.
Flood_txt <-httr::content(Flood, "text")
Flood_txt_json <- jsonlite::fromJSON(Flood_txt, flatten = TRUE)
Flood_df <- as.data.frame(Flood_txt_json)
Flood_df
view(Flood_df)
View(Flood_df)
con <- dbConnect(
bigrquery::bigquery(),
project = "projecthw4",
dataset = "chicago_crime",
billing = 'projecthw4-326017' )
dbListTables(con)
#Part 1
#1. If your working directory is myfolder/homework/, what path would you specify to get the file located at myfolder/MyData.csv?
#I would need to specify the path
".../myfolder/MyData.csv"
#2. Read in the BreastCancer.dat data file.
cancerData <- read.table("BreastCancer.dat")
setwd("~/Desktop/ST558/HW4")
#2. Read in the BreastCancer.dat data file.
cancerData <- read.table("BreastCancer.dat")
View(cancerData)
#3. Using the mosquito files:
#a. Read in the mosquito.txt file.
mosquitoData <- read.table("mosquito.txt")
#3. Using the mosquito files:
#a. Read in the mosquito.txt file.
mosquitoData <- read.table("mosquito.txt", sep = "&")
View(mosquitoData)
#3. Using the mosquito files:
#a. Read in the mosquito.txt file.
mosquitoData <- read.delim("mosquito.txt", delim = "&")
#3. Using the mosquito files:
#a. Read in the mosquito.txt file.
mosquitoData <- read.delim("mosquito.txt", delim = "&")
#b. Read in the mosquito2.txt file.
mosquitoData2 <- read.tsv("mosquito2.txt", colnames(c("Day","Cage","trt","Response")))
#3. Using the mosquito files:
library(readr)
#a. Read in the mosquito.txt file.
mosquitoData <- read.delim("mosquito.txt", &)
#a. Read in the mosquito.txt file.
mosquitoData <- read.delim("mosquito.txt", sep="&")
#b. Read in the mosquito2.txt file.
mosquitoData2 <- read.tsv("mosquito2.txt", colnames(c("Day","Cage","trt","Response")))
#b. Read in the mosquito2.txt file.
mosquitoData2 <- readr::read.tsv("mosquito2.txt", colnames(c("Day","Cage","trt","Response")))
#b. Read in the mosquito2.txt file.
mosquitoData2 <- readr::read_delim("mosquito2.txt", sep = "\t", colnames(c("Day","Cage","trt","Response")))
#b. Read in the mosquito2.txt file.
mosquitoData2 <- readr::read_delim("mosquito2.txt", colnames(c("Day","Cage","trt","Response")))
#b. Read in the mosquito2.txt file.
mosquitoData2 <- read.table("mosquito2.txt", sep = "\t",colnames(c("Day","Cage","trt","Response")))
#b. Read in the mosquito2.txt file.
mosquitoData2 <- read.table("mosquito2.txt", sep = "\t",header = FALSE, colnames(c("Day","Cage","trt","Response")))
View(mosquitoData2)
#b. Read in the mosquito2.txt file.
mosquitoData2 <- read.table("mosquito2.txt", sep = "\t",header = TRUE, colnames(c("Day","Cage","trt","Response")))
View(mosquitoData2)
#b. Read in the mosquito2.txt file.
mosquitoData2 <- read.table("mosquito2.txt", sep = "\t",header = TRUE, col.names = c("Day","Cage","trt","Response"))
View(mosquitoData2)
View(mosquitoData)
#colnames(mosquitoData2) <- c("Day","Cage","trt","Response")
#c. Combine the two datasets into one using the rbind()
rbind(mosquitoData, mosquitoData2)
i
#c. Combine the two datasets into one using the rbind()
mosquitoFullData <- rbind(mosquitoData, mosquitoData2)
View(mosquitoFullData)
#d. Create and append two new variables to the mosquitoFullData object.
mosquitoFullData %>% mutate(Resp_Hour = Response/24) %>%
mutate(Period = if_else(Response > 40, "long",
if_else(Response >= 20), "medium"),
"short")
#d. Create and append two new variables to the mosquitoFullData object.
library(dplyr)
mosquitoFullData %>% mutate(Resp_Hour = Response/24) %>%
mutate(Period = if_else(Response > 40, "long",
if_else(Response >= 20), "medium"),
"short")
rlang::last_error()
mosquitoFullData %>% mutate(Resp_Hour = Response/24) %>%
mutate(Period = if_else(Response > 40, "long",
if_else(Response >= 20), "medium",
"short"))
mosquitoFullData %>% mutate(Resp_Hour = Response/24) %>%
mutate(Period = if_else(Response > 40, "long", if_else(Response >= 20, "medium", "short")))
mosquitoFullData %>% mutate(Resp_Hour = round((Response/24)), digits = 2) %>%
mutate(Period = if_else(Response > 40, "long", if_else(Response >= 20, "medium", "short")))
mosquitoFullData %>% mutate(Resp_Hour = round((Response/24), digits = 2)),
Period = if_else(Response > 40, "long",
if_else(Response >= 20, "medium", "short")))
mosquitoFullData %>% mutate(Resp_Hour = round((Response/24), digits = 2)),
Period = if_else(Response > 40, "long",
if_else(Response >= 20, "medium", "short"))
mosquitoFullData %>% mutate(Resp_Hour = round((Response/24), digits = 2)) %>%
mutate(Period = if_else(Response > 40, "long", if_else(Response >= 20, "medium", "short")))
#e. Write the mosquitoFullData out to a .csv file.
write.csv(mosquitoFullData, file = "mosquitoFull.csv")
mosquitoFullData %>%
mutate(Resp_Hour = round((Response/24), digits = 2)) %>%
mutate(Period = if_else(Response > 40, "long",
if_else(Response >= 20, "medium", "short")))
#e. Write the mosquitoFullData out to a .csv file.
write.csv(mosquitoFullData, file = "mosquitoFull.csv")
#e. Write the mosquitoFullData out to a .csv file.
write.csv(mosquitoFullData, file = "mosquitoFull.csv")
#e. Write the mosquitoFullData out to a .csv file.
write.csv(mosquitoFullData, file = "mosquitoFull.csv", row.names = FALSE)
getwd()
#e. Write the mosquitoFullData out to a .csv file.
write.csv(mosquitoFullData, file = "mosquitoFull.csv", row.names = FALSE)
View(mosquitoFullData)
mosquitoFullData <-
mutate(Resp_Hour = round((Response/24), digits = 2)) %>%
mutate(Period = if_else(Response > 40, "long",
if_else(Response >= 20, "medium", "short")))
mosquitoFullData <- %>%
mutate(Resp_Hour = round((Response/24), digits = 2)) %>%
mutate(Period = if_else(Response > 40, "long",
if_else(Response >= 20, "medium", "short")))
mosquitoFull<-
mosquitoFullData %>%
mutate(Resp_Hour = round((Response/24), digits = 2)) %>%
mutate(Period = if_else(Response > 40, "long",
if_else(Response >= 20, "medium", "short")))
View(mosquitoFull)
D
mosquitoFullData2<-
mosquitoFullData %>%
mutate(Resp_Hour = round((Response/24), digits = 2)) %>%
mutate(Period = if_else(Response > 40, "long",
if_else(Response >= 20, "medium", "short")))
#e. Write the mosquitoFullData out to a .csv file.
write.csv(mosquitoFullData2, file = "mosquitoFull.csv", row.names = FALSE)
#4. Using the effort.dta file:
install.packages("haven")
library(haven)
effortData <- read_dta("effort.dta")
View(effortData)
print(select(where(effortData$change > 15 )))
effortData %>% filter(change > 15)
#5. Read in the second sheet of the Chickens excel file.
library(readxl)
sheepData <- read_excel("Chickens.xlsx", sheet = Sheep)
sheepData <- read_excel("Chickens.xlsx", sheet = "Sheep")
View(sheepData)
con <- dbConnect(
bigrquery::bigquery(),
project = "publicdata",
dataset = "samples",
billing = 'projecthw4-326017' )
#2. have a check
dbListTables()
dbListTables(con)
#3.
#SQL query using dbGetQuery
dbGetQuery(con, "SELECT * FROM samples LIMIT 10")
#3.
#SQL query using dbGetQuery
dbGetQuery(con, "SELECT * FROM wikipedia LIMIT 10")
#SQL query using dplyr
con %>% tbl("wikipedia") %>% head(10)
?dplyr::collect
View(Flood_df)
#SQL query using dplyr
con %>% tbl("wikipedia") %>% head(10)
knitr::opts_chunk$set(echo = TRUE, fig.path = "../images/")
rmarkdown::render("_Rmd/2021-9-12-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "_posts/",
output_options = list(html_preview = FALSE, keep_html=FALSE))
rmarkdown::render("2021-9-12-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "_posts",
output_options = list(html_preview = FALSE, keep_html=FALSE))
plot(iris)
knitr::opts_chunk$set(echo = TRUE, fig.path = "../images/")
rmarkdown::render("2021-9-12-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "_posts",
output_options = list(html_preview = FALSE, keep_html=FALSE))
setwd("~/Desktop/ST558/ywzhou33.github.io")
rmarkdown::render("2021-9-12-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "_posts",
output_options = list(html_preview = FALSE, keep_html=FALSE))
rmarkdown::render("2021-9-12-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "_posts",
output_options = list(html_preview = FALSE, keep_html=FALSE))
plot(iris)
rmarkdown::render("2021-9-12-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "_posts",
output_options = list(html_preview = FALSE, keep_html=FALSE))
rmarkdown::render("2021-9-12-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "_posts",
output_options = list(html_preview = FALSE, keep_html=FALSE))
rmarkdown::render("2021-9-12-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "_posts",
output_options = list(html_preview = FALSE, keep_html=FALSE))
knitr::opts_chunk$set(echo = TRUE, fig.path = "../images/")
plot(iris)
rmarkdown::render("2021-9-12-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "_posts",
output_options = list(html_preview = FALSE, keep_html=FALSE))
rmarkdown::render("_Rmd/2021-9-12-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "_posts/",
output_options = list(html_preview = FALSE, keep_html=FALSE))
rmarkdown::render("2021-9-12-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "_posts",
output_options = list(html_preview = FALSE, keep_html=FALSE))
rmarkdown::render("2021-9-12-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "_posts",
output_options = list(html_preview = FALSE, keep_html=FALSE))
rmarkdown::render("2021-9-12-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "_posts",
output_options = list(html_preview = FALSE, keep_html=FALSE))
rmarkdown::render("2021-9-12-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "_posts",
output_options = list(html_preview = FALSE, keep_html=FALSE))
rmarkdown::render("2021-9-12-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "_posts",
output_options = list(html_preview = FALSE, keep_html=FALSE))
rmarkdown::render("2021-9-12-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "_posts",
output_options = list(html_preview = FALSE, keep_html=FALSE))
rmarkdown::render("2021-9-12-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "_posts",
output_options = list(html_preview = FALSE, keep_html=FALSE))
rmarkdown::render("2021-9-12-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "_posts",
output_options = list(html_preview = FALSE, keep_html=FALSE))
rmarkdown::render("_Rmd/2021-9-12-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "_posts/",
output_options = list(html_preview = FALSE, keep_html=FALSE))
setwd("~/Desktop/ST558/ywzhou33.github.io/_posts")
rmarkdown::render("_Rmd/2021-9-12-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "_posts/",
output_options = list(html_preview = FALSE, keep_html=FALSE))
rmarkdown::render("_Rmd/2021-9-12-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "_posts/",
output_options = list(html_preview = FALSE, keep_html=FALSE))
rmarkdown::render("_Rmd/2021-9-14-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "_posts/",
output_options = list(html_preview = FALSE, keep_html=FALSE))
rmarkdown::render("_Rmd/2021-9-14-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "_posts/",
output_options = list(html_preview = FALSE, keep_html=FALSE))
rmarkdown::render("_Rmd/2021-9-14-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "_posts/",
output_options = list(html_preview = FALSE, keep_html=FALSE))
rmarkdown::render("_Rmd/2021-9-14-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "_posts/",
output_options = list(html_preview = FALSE, keep_html=FALSE))
setwd("~/Desktop/ST558/ywzhou33.github.io")
rmarkdown::render("_Rmd/2021-9-14-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "_posts/",
output_options = list(html_preview = FALSE, keep_html=FALSE))
setwd("~/Desktop/ST558/HW4")
knitr::opts_chunk$set(echo = FALSE, eval = TRUE, message = FALSE, warning = FALSE)
rmarkdown::render("ST558_HW4.Rmd", output_format = "pdf_document", output_options = list(
toc = TRUE,
toc_depth = '2',
number_sections = TRUE,
df_print = 'tibble'))
rmarkdown::render("ST558_HW4.Rmd", output_format = "pdf_document", output_options = list(
toc = TRUE,
toc_depth = '2',
number_sections = TRUE,
df_print = 'tibble'))
cancerData <- read.table("BreastCancer.dat")
#SQL query using dplyr
con %>% tbl("wikipedia") %>% head(10) %>% collect()
View(Flood_df)
BBC <- httr::content(Flood)$articles[[5]]
BBC
View(Flood_df)
library(readr)
mosquitoData <- read.delim("mosquito.txt", sep = "&")
colnames(mosquitoData2) <- c("Day","Cage","trt","Response")
x <- colnames(mosquitoData2) <- c("D","C","t","Resp")
x
install.packages("haven")
install.packages("haven")
?View
head(Flood_df, n = 10)
head(Flood_df, n = 5)
#Print out the invoices table.
invoices <- dbGetQuery(db, "SELECT * FROM invoices")
print(head(customers, n = 10))
head(cancerData, n = 10)
cancerData <- read.table("BreastCancer.dat")
head(cancerData, n = 5)
library(readr)
mosquitoData <- read.delim("mosquito.txt", sep = "&")
head(mosquitoData, n = 5)
mosquitoData2 <- read.table("mosquito2.txt", sep = "\t",header = TRUE,
col.names = c("Day","Cage","trt","Response"))
head(mosquitoData2, n = 5)
mosquitoFullData <- rbind(mosquitoData, mosquitoData2)
head(mosquitoDataFullData, n = 5)
mosquitoFullData <- rbind(mosquitoData, mosquitoData2)
head(mosquitoFullData, n = 5)
library(dplyr)
mosquitoFullData2 <-
mosquitoFullData %>%
mutate(Resp_Hour = round((Response/24), digits = 2)) %>%
mutate(Period = if_else(Response > 40, "long",
if_else(Response >= 20, "medium", "short")))
head(mosquitoData2, n = 5)
write.csv(mosquitoFullData2, file = "mosquitoFull.csv", row.names = FALSE)
library(dplyr)
mosquitoFullData2 <-
mosquitoFullData %>%
mutate(Resp_Hour = round((Response/24), digits = 2)) %>%
mutate(Period = if_else(Response > 40, "long",
if_else(Response >= 20, "medium", "short")))
head(mosquitoFullData2, n = 5)
install.packages("haven")
library(haven)
effortData <- read_dta("effort.dta")
head(effortData, n = 5)
install.packages("haven")
library(haven)
effortData <- read_dta("effort.dta")
head(effortData, n = 5)
effortData %>% filter(change > 15)
head(effortData, n = 5)
effortData %>% filter(change > 15)
library(readxl)
sheepData <- read_excel("Chickens.xlsx", sheet = "Sheep")
library(readxl)
sheepData <- read_excel("Chickens.xlsx", sheet = "Sheep")
head(sheepData, n = 5)
library(readxl)
sheepData <- read_excel("Chickens.xlsx", sheet = "Sheep")
head(sheepData, n = 5)
dbListTables(con)
devtools::install_github("r-dbi/bigrquery")
install.packages("usethis")
library(devtools)
library(bigrquery)
library(DBI)
con <- dbConnect(
bigrquery::bigquery(),
project = "publicdata",
dataset = "samples",
billing = 'projecthw4-326017' )
install.packages("usethis")
devtools::install_github("r-dbi/bigrquery")
library(devtools)
library(bigrquery)
library(DBI)
con <- dbConnect(
bigrquery::bigquery(),
project = "publicdata",
dataset = "samples",
billing = 'projecthw4-326017' )
dbListTables(con)
dbGetQuery(con, "SELECT * FROM wikipedia LIMIT 10")
con %>% tbl("wikipedia") %>% head(10) %>% collect()
is.data.frame(con)
str(con)
str(tbl("wikipedia"))
is.data.frame(tbl("wikipedia"))
dbDisconnect
dbDisconnect()
dbDisconnect
dbDisconnect
dbDisconnect
library(DBI)
library(RSQLite)
library(tidyverse)
#type of database and then the path to the downloaded database.
db <- dbConnect( RSQLite::SQLite(),'chinook.db')
dbListTables(db)
Combined <- inner_join(invoices, customers, by = "CustomerId")
#Print out the invoices table.
invoices <- dbGetQuery(db, "SELECT * FROM invoices")
print(invoices)
#Print out the customers table.
customers <- dbGetQuery(db, "SELECT * FROM customers")
print(head(customers, n = 10))
#Print out the invoices table.
invoices <- dbGetQuery(db, "SELECT * FROM invoices")
print(head(invoices, n = 10))
#Print out the customers table.
customers <- dbGetQuery(db, "SELECT * FROM customers")
print(head(customers, n = 10))
Combined <- inner_join(invoices, customers, by = "CustomerId")
#Print out the invoices table.
invoices <- dbGetQuery(db, "SELECT * FROM invoices LIMIT 10")
print(head(invoices, n = 5))
#Print out the customers table.
customers <- dbGetQuery(db, "SELECT * FROM customers")
print(head(customers, n = 5))
#Print out the invoices table.
invoices <- dbGetQuery(db, "SELECT * FROM invoices LIMIT 10")
#Print out the customers table.
customers <- dbGetQuery(db, "SELECT * FROM customers")
print(head(customers, n = 5))
#Print out the invoices table.
invoices <- dbGetQuery(db, "SELECT * FROM invoices LIMIT 5")
invoices
#Print out the customers table.
customers <- dbGetQuery(db, "SELECT * FROM customers LIMIT 5")
customers
Combined <- inner_join(invoices, customers, by = "CustomerId")
head(Combined, n = 10)
#Print out the invoices table.
invoices <- dbGetQuery(db, "SELECT * FROM invoices")
head(invoices, n = 5)
#Print out the customers table.
customers <- dbGetQuery(db, "SELECT * FROM customers")
head(customers, n = 5)
Combined <- inner_join(invoices, customers, by = "CustomerId")
head(Combined, n = 10)
library(httr)
library(jsonlite)
#Get the URL
baseURL <- "https://newsapi.org/v2/everything?q=bitcoin"
Title <- "qlnTitle=Flooding"
date <- "from=2021-08-20"
language <- "language=en"
key <- "apikey=e328683c4a2941348973ef36046cad10"
URL <- paste(baseURL, Title, date, language, key, sep = "&")
URL
Flood <- httr::GET(URL)
Flood
library(httr)
library(jsonlite)
#Get the URL
baseURL <- "https://newsapi.org/v2/everything?q=bitcoin"
Title <- "qlnTitle=Flooding"
date <- "from=2021-08-20"
language <- "language=en"
key <- "apikey=e328683c4a2941348973ef36046cad10"
URL <- paste(baseURL, Title, date, language, key, sep = "&")
Flood <- httr::GET(URL)
Flood
str(httr::content(Flood), max.level = 1)
Flood_txt <-httr::content(Flood, "text")
Flood_txt_json <- jsonlite::fromJSON(Flood_txt, flatten = TRUE)
Flood_df <- as.data.frame(Flood_txt_json)
head(Flood_df, n = 5)
setwd("~/Desktop/ST558/HW2")
Flood_txt <-httr::content(Flood, "text")
Flood_txt_json <- jsonlite::fromJSON(Flood_txt, flatten = TRUE)
Flood_df <- as.data.frame(Flood_txt_json)
head(Flood_df, n = 1)
con %>% tbl("wikipedia") %>% head(10) %>% collect()
con %>% tbl("wikipedia") %>% head(10) %>% collect()
as.data.frame(con)
collect()
con %>% tbl("wikipedia") %>% head(10) %>% collect()
con %>% tbl("wikipedia") %>% head(10)
head(select(con, id))
con %>% tbl("wikipedia") %>% head(10) %>% collect()
getwd()
setwd(ST558/HW4)
setwd(/ST558/HW4)
setwd(~/ST558/HW4)
setwd(~/Desktop/ST558/HW4)
getwd()
setwd("..")
getwd()
setwd(/Users/yueweizhou/Desktop/ST558/HW2)
setwd("/Users/yueweizhou/Desktop/ST558/HW2")
setwd("../HW4")
getwd()
setwd("/Users/yueweizhou/Desktop/ST558/")
getwd()
setwd("/Users/yueweizhou/Desktop/ST558/HW2")
setwd("/Users/yueweizhou/Desktop/ST558/HW2/")
getwd()
setwd("../HW4")
getwd()
