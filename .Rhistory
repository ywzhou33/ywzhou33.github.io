plot(iris)
plot(iris)
setwd("~/Desktop/ST558/ywzhou33.github.io/_posts/_Rmd")
rmarkdown::render("2021-9-12-Second-Blog_Post.Rmd", output_format = "github_document", output_dir = "/Users/yueweizhou/Desktop/ST558/ywzhou33.github.io/_posts/_Rmd"
output_options = list(html_preview = FALSE))
rmarkdown::render("2021-9-12-Second-Blog_Post.Rmd",
output_format = "github_document",
output_dir = "/Users/yueweizhou/Desktop/ST558/ywzhou33.github.io/_posts/_Rmd",
output_options = list(html_preview = FALSE))
rmarkdown::render("~/Desktop/ST558/ywzhou33.github.io/_posts/_Rmd/2021-9-12-Second-Blog_Post.Rmd",
output_format = "github_document",
output_dir = "/Users/yueweizhou/Desktop/ST558/ywzhou33.github.io/_posts/_Rmd",
output_options = list(html_preview = FALSE))
rmarkdown::render("/Users/yueweizhou/Desktop/ST558/ywzhou33.github.io/_posts/_Rmd/2021-9-12-Second-Blog_Post.Rmd",
output_format = "github_document",
output_dir = "/Users/yueweizhou/Desktop/ST558/ywzhou33.github.io/_posts/_Rmd",
output_options = list(html_preview = FALSE))
list.files("/Users/yueweizhou/Desktop/ST558/ywzhou33.github.io/_posts/_Rmd")
rmarkdown::render("2021-9-12-Second-Blog_Post.Rmd",
output_format = "github_document",
output_dir = "/Users/yueweizhou/Desktop/ST558/ywzhou33.github.io/_posts/_Rmd",
output_options = list(html_preview = FALSE))
2021-9-12-Second-Blog-Post.Rmd
rmarkdown::render("2021-9-12-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "/Users/yueweizhou/Desktop/ST558/ywzhou33.github.io/_posts",
output_options = list(html_preview = FALSE))
rmarkdown::render("2021-9-12-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "/Users/yueweizhou/Desktop/ST558/ywzhou33.github.io/_posts",
output_options = list(html_preview = FALSE))
rmarkdown::render("2021-9-12-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "/Users/yueweizhou/Desktop/ST558/ywzhou33.github.io/_posts",
output_options = list(html_preview = FALSE))
plot(iris)
rmarkdown::render("2021-9-12-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "/Users/yueweizhou/Desktop/ST558/ywzhou33.github.io/_posts",
output_options = list(html_preview = FALSE))
rmarkdown::render("2021-9-12-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "/Users/yueweizhou/Desktop/ST558/ywzhou33.github.io/_posts",
output_options = list(html_preview = FALSE))
rmarkdown::render("2021-9-12-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "/Users/yueweizhou/Desktop/ST558/ywzhou33.github.io/_posts",
output_options = list(html_preview = FALSE, keep_html=FALSE))
library(devtools)
detach("package:usethis", unload = TRUE)
library(usethis)
library(devtools)
#install the devtools package if you haven't already
#devtools::install_github("r-dbi/bigrquery")
library(bigrquery)
#install the devtools package if you haven't already
devtools::install_github("r-dbi/bigrquery")
library(bigrquery)
library(DBI)
con <- dbConnect(
bigrquery::bigquery(),
project = "ProjectHW4",
dataset = "samples",
billing = 'projecthw4-326015' )
library(devtools)
library(bigrquery)
library(dbplyr)
install.packages("dbplyr")
library(bigrquery)
install.packages("bigrquery")
library(DBI)
con <- dbConnect(
bigrquery::bigquery(),
project = "ProjectHW4",
dataset = "samples",
billing = 'projecthw4-326015' )
library(bigrquery)
dbListTables()
library(bigrquery)
#Local Database
#1. Connect to the local database.
library(DBI)
library(RSQLite)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(devtools)
library(bigrquery)
library(DBI)
con <- dbConnect(
bigrquery::bigquery(),
project = "ProjectHW4",
dataset = "samples",
billing = 'projecthw4-326015' )
detach("package:usethis", unload = TRUE)
library(usethis)
library(devtools)
library(bigrquery)
library(DBI)
con <- dbConnect(
bigrquery::bigquery(),
project = "ProjectHW4",
dataset = "samples",
billing = 'projecthw4-326015' )
#2. have a check
dbListTables()
dbListTables(con)
#2. have a check
dbListTables()
dbListTables(con)
rlang::last_error()
library(bigrquery)
library(DBI)
con <- dbConnect(
bigrquery::bigquery(),
project = "ProjectHW4",
dataset = "samples",
billing = 'projecthw4-326015' )
dbListTables(con)
#Part 2
#1.connect to the database.
devtools::install_github("r-dbi/bigrquery")
library(devtools)
install.packages("usethis")
install.packages("usethis")
library(devtools)
library(bigrquery)
library(DBI)
con <- dbConnect(
bigrquery::bigquery(),
project = "ProjectHW4",
dataset = "samples",
billing = 'projecthw4-326015' )
dbListTables(con)
dbListTables(con)
rlang::last_error()
#Local Database
#1. Connect to the local database.
library(DBI)
library(RSQLite)
library(tidyverse)
#type of database and then the path to the downloaded database.
db <- dbConnect( RSQLite::SQLite(),'chinook/chinook.db')
setwd("~/Desktop/ST558/HW4")
#type of database and then the path to the downloaded database.
db <- dbConnect( RSQLite::SQLite(),'chinook/chinook.db')
#type of database and then the path to the downloaded database.
db <- dbConnect( RSQLite::SQLite(),'/Users/yueweizhou/Desktop/ST558/HW4/chinook.db')
dbListTables(db)
#3. Print out the invoices table and the customers table.
dbGetQuery("invoices")
#3. Print out the invoices table and the customers table.
dbGetQuery(invoices)
#3. Print out the invoices table and the customers table.
dbGetQuery(db[7])
#3. Print out the invoices table and the customers table.
dbGetQuery(db[[7]])
#3. Print out the invoices table and the customers table.
dbGetQuery(db, "SELECT * FROM invoices, n=10")
#3. Print out the invoices table and the customers table.
dbGetQuery(db, "SELECT * FROM invoices LIMIT 10")
#3. Print out the invoices table and the customers table.
invoices <- dbGetQuery(db, "SELECT * FROM invoices")
print(invoices)
#4. Combine invoices and customers by CustomerID.
Combined <- inner_join(invoices, customers, by = "CustomerId")
# Print out the customers table.
customers <- dbGetQuery(db, "SELECT * FROM customers")
print(customers)
#4. Combine invoices and customers by CustomerID.
Combined <- inner_join(invoices, customers, by = "CustomerId")
#Part 3
install.packages("httr")
install.packages("httr")
install.packages("httr")
source('~/Desktop/ST558/ST558_HW4.R', echo=TRUE)
install.packages("usethis")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
require("httr")
require("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
require("jsonlite")
username <- "yzhou33"
password <- "Zyw9930Mint"
base <- " HTTPS://api.intrinio.com/"
Endpoint <- "prices"
stock <- "AAPL"
call1 <- paste(base,endpoint,"?","ticker","=", stock, sep="")
call1 <- paste(base,Endpoint,"?","ticker","=", stock, sep="")
call1
get_prices <- GET(call1, authenticate(username,password, type = "basic"))
dbListTables(con)
dbListTables(con)
#Part 2
#1.connect to the database.
devtools::install_github("r-dbi/bigrquery")
install.packages("usethis")
install.packages("usethis")
library(devtools)
library(bigrquery)
library(DBI)
con <- dbConnect(
bigrquery::bigquery(),
project = "ProjectHW4",
dataset = "samples",
billing = 'projecthw4-326015' )
#2. have a check
dbListTables()
dbListTables(con)
1
dbListTables(con)
dbListTables(con)
